<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>业北Online</title>
  
  
  <link href="https://qdteng.online/atom.xml" rel="self"/>
  
  <link href="https://qdteng.online/"/>
  <updated>2024-11-21T02:09:17.496Z</updated>
  <id>https://qdteng.online/</id>
  
  <author>
    <name>qdteng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IP形象和KV了解一下</title>
    <link href="https://qdteng.online/2024/11/21/IP%E5%BD%A2%E8%B1%A1%E5%92%8CKV%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/"/>
    <id>https://qdteng.online/2024/11/21/IP%E5%BD%A2%E8%B1%A1%E5%92%8CKV%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B/</id>
    <published>2024-11-21T01:38:06.000Z</published>
    <updated>2024-11-21T02:09:17.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="KV"><a href="#KV" class="headerlink" title="KV"></a>KV</h1><h2 id="KV是什么意思"><a href="#KV是什么意思" class="headerlink" title="KV是什么意思"></a>KV是什么意思</h2><p>KV是英文Key Vision英文首字母的缩写，中文翻译为主视觉，指的是在一个广告设计活动中，最主要的占据最核心地位的视觉设计稿。从这一核心视觉设计稿中可以延伸出来多种分支画面，共同组成整体的广告活动。</p><h2 id="KV-主视觉-的内容"><a href="#KV-主视觉-的内容" class="headerlink" title="KV(主视觉)的内容"></a>KV(主视觉)的内容</h2><p><strong>1、标志设计</strong></p><p>人们可以获取大量信息，并很大程度地影响自己的生活观念和生活方式。分为政治性、公益性、文化性、商业性。</p><p><strong>2、VI设计</strong></p><p>指运用视觉设计手段，通过logo的造型和特定的色彩等表现手法，使企业的经营理念、行为观念、管理特色、产品包装风格、营销准则与策略形成一种整体形象视觉设计。</p><p><strong>3、广告设计</strong></p><p>各种手工或电脑的绘画手段或影像技术，以及利用复合方式进行创造性的图像设计，构思巧妙，表现独特。</p><p><strong>4、画册设计</strong></p><p>画册也被称为宣传册，宣传手册，图册，折页设计。画册设计宣传目的强，以生命的形式和风格来展现企业的风貌与形象的形成，都企业所注重的观点，当企业所关注的焦点不同，所以宣传的产品性质差异化不同，既而让这样的宣传目的达到一个高点。</p><p><strong>5、海报设计</strong></p><p>海报设计是视觉传达的一种表现形式，主要运用图像、文字、色彩、版面、图形等元素，进行创意性的平面设计。海报设计通常能够快速吸引他人的注意力，恰当地展现出商家的宣传信息，从而起到促销推广等重要作用。</p><p><strong>6、包装设计</strong></p><p>对产品包装设计及排版等进行艺术化的设计，提高消费者对产品的关注，从而加深对其思想性、文化性和知识性的认识。</p><p><strong>7、界面设计</strong></p><p>界面设计又叫<a href="https://www.youhuaxing.cn/seojianzhan/17733.html">UI设计</a>，包括网页视觉设计和各类手执（手机、pad等等）系统的界面视觉设计（不含交互、体验），是近些年兴起的新兴设计学科。</p><h2 id="KV-主视觉-的特点"><a href="#KV-主视觉-的特点" class="headerlink" title="KV(主视觉)的特点"></a>KV(主视觉)的特点</h2><p><strong>1、关联性</strong></p><p>在设计画面中的品牌信息要直接和消费者的特征相关联，只有二者相互关联才能够按照消费者对广告中的画面有所兴趣和有所关注。</p><p><strong>2、原创性</strong></p><p>如果所采用的设计画面或设计方式只是千篇一律的或者是较为普通的表达方式，那么客户很容易将这些普通的信息直接过滤掉。所以更应当采用一些创新的或者是原创度较高的信息。</p><p><strong>3、震撼性</strong></p><p>设计出来的作品最好能够让消费者们眼前一亮，这样就能够达到掷地有声的效果，也能够让他们加强对该品牌的印象。</p><h1 id="IP形象"><a href="#IP形象" class="headerlink" title="IP形象"></a>IP形象</h1><p>形象 IP 主要依赖于形象展开的故事类型，比如我们前面提到的 IP 吉祥物就属于这种类型，它更多是基于某个角色形象来进行商业的变现，此形象在人们心中有着很深的印象。</p><p>比如：Hello Kitty、米老鼠、唐老鸭就属于形象 IP，它们在商业模式上拥有极大的用户群，衍生产品很多，IP 本身的内容创作较少，更依赖于授权的商业模式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;KV&quot;&gt;&lt;a href=&quot;#KV&quot; class=&quot;headerlink&quot; title=&quot;KV&quot;&gt;&lt;/a&gt;KV&lt;/h1&gt;&lt;h2 id=&quot;KV是什么意思&quot;&gt;&lt;a href=&quot;#KV是什么意思&quot; class=&quot;headerlink&quot; title=&quot;KV是什么意思&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="乱弹" scheme="https://qdteng.online/categories/%E4%B9%B1%E5%BC%B9/"/>
    
    
    <category term="乱弹" scheme="https://qdteng.online/tags/%E4%B9%B1%E5%BC%B9/"/>
    
  </entry>
  
  <entry>
    <title>centeros8的时间同步chrony</title>
    <link href="https://qdteng.online/2024/11/18/centeros8%E7%9A%84%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5chrony/"/>
    <id>https://qdteng.online/2024/11/18/centeros8%E7%9A%84%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5chrony/</id>
    <published>2024-11-18T06:49:31.000Z</published>
    <updated>2024-11-18T07:22:50.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要做时间同步？"><a href="#为什么要做时间同步？" class="headerlink" title="为什么要做时间同步？"></a>为什么要做时间同步？</h1><p>分布式服务在调用本地时间做数据处理时时间问题显得尤为重要</p><h1 id="centeros8-中使用chrony"><a href="#centeros8-中使用chrony" class="headerlink" title="centeros8 中使用chrony"></a>centeros8 中使用chrony</h1><p>CentOS8上使用Chrony配置NTP服务器，用于同步时间。 它有两个程序，chrony和chronyd， chronyd是守护进程 ，chrony是一个命令行界面程序，可以用来监控chronyd的性能，并修改各种操作参数。</p><p>系统会默认安装并启动，如果系统不存在则需要安装此工具库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install chrony</span><br></pre></td></tr></table></figure><h2 id="关于配置项的描述"><a href="#关于配置项的描述" class="headerlink" title="关于配置项的描述"></a>关于配置项的描述</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 使用pool.ntp.org项目中的公共服务器。</span><br><span class="line"># 请考虑加入该池（http://www.pool.ntp.org/join.html）。</span><br><span class="line">pool ntp.aliyun.com iburst</span><br><span class="line"></span><br><span class="line"># 记录系统时钟获取/失去时间的速率。</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line"></span><br><span class="line"># 如果系统时钟的偏差大于1秒，则允许在前三次更新中进行 步进调整。</span><br><span class="line">makestep 1.0 3</span><br><span class="line"></span><br><span class="line"># 启用内核对实时时钟（RTC）的同步。</span><br><span class="line">rtcsync</span><br><span class="line"></span><br><span class="line"># 启用所有支持硬件时间戳的接口。</span><br><span class="line">#hwtimestamp *</span><br><span class="line"></span><br><span class="line"># 增加调整系统时钟所需最小可选源的数量。</span><br><span class="line">#minsources 2</span><br><span class="line"></span><br><span class="line"># 允许来自本地网络的NTP客户端访问。</span><br><span class="line">#allow 0.0.0.0/0</span><br><span class="line"></span><br><span class="line"># 即使未与时间源同步，也提供时间服务。</span><br><span class="line">#local stratum 10</span><br><span class="line"></span><br><span class="line"># 指定包含 NTP 认证密钥的文件。</span><br><span class="line"># keyfile /etc/chrony.keys</span><br><span class="line"></span><br><span class="line"># 从系统 tz 数据库获取 TAI-UTC 偏移量和闰秒。</span><br><span class="line">leapsectz right/UTC</span><br><span class="line"></span><br><span class="line"># 指定日志文件的目录。</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line"></span><br><span class="line"># 选择要记录哪些信息。</span><br><span class="line">#log measurements statistics tracking</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server 0.cn.pool.ntp.org</span><br><span class="line">server 1.cn.pool.ntp.org</span><br><span class="line">server 2.cn.pool.ntp.org</span><br><span class="line">server 3.cn.pool.ntp.org</span><br><span class="line">server ntp.aliyun.com iburst</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 如果时间差超过0.1秒，就在前三次的时钟更新时，启动大步跨方式</span><br><span class="line">## chronyd根据需求减慢或加速时间调整，</span><br><span class="line">## 在某些情况下系统时钟可能漂移过快，导致时间调整用时过长。</span><br><span class="line">## 该指令强制chronyd调整时期，大于某个阀值时步进调整系统时钟。</span><br><span class="line">## 只有在因chronyd启动时间超过指定的限制时（可使用负值来禁用限制）没有更多时钟更新时才生效。</span><br><span class="line">makestep 0.1 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 允许哪些网段的客户端访问</span><br><span class="line">allow 0.0.0.0/0</span><br><span class="line"></span><br><span class="line"># 允许访问哪些时间服务器</span><br><span class="line">## all表示允许本机访问所有时间服务器</span><br><span class="line">allow all</span><br><span class="line"></span><br><span class="line"># 服务器绑定ip和端口</span><br><span class="line">bindaddress 0.0.0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">local stratum 10</span><br></pre></td></tr></table></figure><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">allow all</span><br><span class="line">server 192.168.30.11 iburst</span><br><span class="line">makestep 0.1 3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    查看时间同步源：</span><br><span class="line">　　$ chronyc sources -v</span><br><span class="line">　　立即手工同步</span><br><span class="line">　　$chronyc -a makestep</span><br><span class="line">　　查看时间同步源状态：</span><br><span class="line">　　$ chronyc sourcestats -v</span><br><span class="line">　　设置硬件时间</span><br><span class="line">　　硬件时间默认为UTC：</span><br><span class="line">　　$ timedatectl set-local-rtc 1</span><br><span class="line">    查看时间配置信息</span><br><span class="line">    timedatectl </span><br><span class="line">　　启用NTP时间同步：</span><br><span class="line">　　$ timedatectl set-ntp yes</span><br><span class="line">　　校准时间服务器：</span><br><span class="line">　　$ chronyc tracking</span><br><span class="line">    #实时打印当前时间</span><br><span class="line">    </span><br><span class="line">　　最后需要注意的是，配置完/etc/chrony.conf后，需重启chrony服务，否则可能会不生效。</span><br><span class="line">    使用systemctl start chronyd.service　　启动chrony服务</span><br><span class="line">    使用systemctl enable chronyd.service　　设置开机同步时间</span><br><span class="line">    使用systemctl status chronyd.service　　查看服务状态</span><br></pre></td></tr></table></figure><h2 id="一个未验证过的脚本"><a href="#一个未验证过的脚本" class="headerlink" title="一个未验证过的脚本"></a>一个未验证过的脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 配置chrony 作为时间同步的 服务端 和 客户端。</span><br><span class="line"></span><br><span class="line"># 服务端IP(内网)地址。</span><br><span class="line">server_ip=&quot;192.168.30.11&quot;</span><br><span class="line"># 服务端允许哪个IP段访问。</span><br><span class="line">server_allow_ip=&quot;192.168.30.0/24&quot;</span><br><span class="line"># 服务端使用的时间源。</span><br><span class="line">server_source=&quot;pool ntp.aliyun.com iburst&quot;</span><br><span class="line"></span><br><span class="line"># 服务端配置</span><br><span class="line">ntp_server_conf() &#123;</span><br><span class="line">    sed -i &#x27;s/^pool/#pool/&#x27; /etc/chrony.conf</span><br><span class="line">    sed -i &#x27;s/^server/#server/&#x27; /etc/chrony.conf</span><br><span class="line">    echo -e &quot;$&#123;1&#125;\nallow $&#123;2&#125;\nlocal stratum 10&quot; &gt;&gt; /etc/chrony.conf</span><br><span class="line">    systemctl restart chronyd</span><br><span class="line">    firewall-cmd --permanent --zone=public --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.30.0/24&quot; port port=&quot;123&quot; protocol=&quot;udp&quot; accept&quot;</span><br><span class="line">    firewall-cmd --reload</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 客户端配置</span><br><span class="line">ntp_client_conf() &#123;</span><br><span class="line">    sed -i &#x27;s/^pool/#pool/&#x27; /etc/chrony.conf</span><br><span class="line">    sed -i &#x27;s/^server/#server/&#x27; /etc/chrony.conf</span><br><span class="line">    echo &quot;server $1 iburst&quot; &gt;&gt; /etc/chrony.conf</span><br><span class="line">    systemctl restart chronyd</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 判断运行该脚本的是服务端还是客户端。</span><br><span class="line">ip addr | grep &quot;$server_ip&quot; &amp;&gt; /dev/null</span><br><span class="line">if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">    ntp_server_conf &quot;$&#123;server_source&#125;&quot; &quot;$&#123;server_allow_ip&#125;&quot;</span><br><span class="line">else</span><br><span class="line">    ntp_client_conf &quot;$&#123;server_ip&#125;&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为什么要做时间同步？&quot;&gt;&lt;a href=&quot;#为什么要做时间同步？&quot; class=&quot;headerlink&quot; title=&quot;为什么要做时间同步？&quot;&gt;&lt;/a&gt;为什么要做时间同步？&lt;/h1&gt;&lt;p&gt;分布式服务在调用本地时间做数据处理时时间问题显得尤为重要&lt;/p&gt;
&lt;h1 i</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="本地时间同步" scheme="https://qdteng.online/tags/%E6%9C%AC%E5%9C%B0%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
    
    <category term="chrony" scheme="https://qdteng.online/tags/chrony/"/>
    
    <category term="linux集群时间同步" scheme="https://qdteng.online/tags/linux%E9%9B%86%E7%BE%A4%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>LobeChat+Ollama搭建本地大模型</title>
    <link href="https://qdteng.online/2024/10/24/LobeChat-Ollama%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    <id>https://qdteng.online/2024/10/24/LobeChat-Ollama%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/</id>
    <published>2024-10-24T03:24:10.000Z</published>
    <updated>2024-10-29T00:37:38.691Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><p><a href="https://github.com/DaoCloud/public-image-mirror">docker镜像科学下载</a></p></li><li><p><a href="https://www.bilibili.com/read/cv33858702/">处理文件的本地智库</a></p></li><li><p><a href="https://blog.csdn.net/myepicure/article/details/139154711">AnythingLLM 的 Docker 使用_anythingllm docker-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/u010197332/article/details/137604798">Linux内网离线安装Ollama_ollama离线安装-CSDN博客</a></p></li></ul><h3 id="砂锅操作"><a href="#砂锅操作" class="headerlink" title="砂锅操作"></a>砂锅操作</h3><h4 id="Ollama离线安装"><a href="#Ollama离线安装" class="headerlink" title="Ollama离线安装"></a>Ollama离线安装</h4><p>在线安装脚本引用了github在线下载文件，所以速度你懂得</p><ul><li><p><a href="https://github.com/ollama/ollama/blob/main/scripts/install.sh">ollama 安装脚本下载地址</a></p></li><li><p><a href="https://github.com/ollama/ollama/releases/">ollama 安装包</a></p><p>具备以上2个文件之后 修改安装脚本使其可正常安装，不同版本略有不同，具体思路</p><ol><li><p>去掉shell中远程下载部分</p></li><li><p>修改shell中对安装包的引用路径确保能找到对应文件</p></li><li><p>关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#下载链接</span><br><span class="line">status &quot;Downloading ollama...&quot;</span><br><span class="line">#ollama安装目录</span><br><span class="line">status &quot;Installing ollama to $BINDIR...&quot;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="Ollama使用"><a href="#Ollama使用" class="headerlink" title="Ollama使用"></a>Ollama使用</h4><h5 id="可在官网搜索支持的大模型"><a href="#可在官网搜索支持的大模型" class="headerlink" title="可在官网搜索支持的大模型"></a>可在官网搜索支持的大模型</h5><p><a href="https://ollama.com/search?c=tools">Ollama-search-tools</a></p><h5 id="运行llama3"><a href="#运行llama3" class="headerlink" title="运行llama3"></a>运行llama3</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 1b =10亿参数</span><br><span class="line">ollama run llama3.1</span><br><span class="line">#下载成功后不出意外你就可以跟他say hello 了</span><br></pre></td></tr></table></figure><h5 id="修改ollama可以非localhost访问"><a href="#修改ollama可以非localhost访问" class="headerlink" title="修改ollama可以非localhost访问"></a>修改ollama可以非localhost访问</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#编辑配置文件</span><br><span class="line">vi /etc/systemd/system/ollama.service.d/override.conf</span><br><span class="line">#添加如下内容</span><br><span class="line">[Service]</span><br><span class="line">Environment=&quot;OLLAMA_HOST=0.0.0.0</span><br><span class="line">#重启服务使生效</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart ollama</span><br></pre></td></tr></table></figure><h4 id="anythingLLM安装"><a href="#anythingLLM安装" class="headerlink" title="anythingLLM安装"></a>anythingLLM安装</h4><h5 id="准备好docker环境"><a href="#准备好docker环境" class="headerlink" title="准备好docker环境"></a>准备好docker环境</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#防止便秘，先配置几个好用的docker源</span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://dockerhub.icu&quot;,</span><br><span class="line">        &quot;https://docker.chenby.cn&quot;,</span><br><span class="line">        &quot;https://docker.1panel.live&quot;,</span><br><span class="line">        &quot;https://docker.awsl9527.cn&quot;,</span><br><span class="line">        &quot;https://docker.anyhub.us.kg&quot;,</span><br><span class="line">        &quot;https://dhub.kubesre.xyz&quot;</span><br><span class="line">    ]     </span><br><span class="line">   </span><br></pre></td></tr></table></figure><h4 id="使用docker运行"><a href="#使用docker运行" class="headerlink" title="使用docker运行"></a>使用docker运行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 准备好配置目录</span><br><span class="line">export STORAGE_LOCATION=/var/lib/anythingllm &amp;&amp; \</span><br><span class="line">mkdir -p $STORAGE_LOCATION &amp;&amp; \</span><br><span class="line">touch &quot;$STORAGE_LOCATION/.env&quot;</span><br><span class="line">#设置目录可完全读写</span><br><span class="line">chmod -R 777 /var/lib/anythingllm</span><br><span class="line"># 去吧皮卡丘</span><br><span class="line">docker run -d \</span><br><span class="line"> --name anythingllm \</span><br><span class="line"> --add-host=host.docker.internal:host-gateway \</span><br><span class="line"> --env STORAGE_DIR=/app/server/storage \</span><br><span class="line"> --health-cmd &quot;/bin/bash /usr/local/bin/docker-healthcheck.sh || exit 1&quot; \</span><br><span class="line"> --health-interval 60s \</span><br><span class="line"> --health-start-period 60s \</span><br><span class="line"> --health-timeout 10s \</span><br><span class="line"> -p 3001:3001/tcp \</span><br><span class="line"> --restart=always \</span><br><span class="line"> --user anythingllm \</span><br><span class="line"> -v $&#123;STORAGE_LOCATION&#125;:/app/server/storage \</span><br><span class="line"> -v $&#123;STORAGE_LOCATION&#125;/.env:/app/server/.env \</span><br><span class="line"> -w /app \</span><br><span class="line"> mintplexlabs/anythingllm</span><br></pre></td></tr></table></figure><h4 id="anythingLLM-配置-ollama"><a href="#anythingLLM-配置-ollama" class="headerlink" title="anythingLLM 配置 ollama"></a>anythingLLM 配置 ollama</h4><ol><li><p>访问地址 ： <a href="http://localhost:3001/">http://localhost:3001/</a></p></li><li><p>配置 ollama 地址</p><p>注意这里的 <strong>ollama base url</strong> 需要填写docker配置的宿主机映射url</p><p><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/llm%E9%85%8D%E7%BD%AEollama%E6%9C%AC%E5%9C%B0%E6%A8%A1%E5%9E%8B-llama3.png"></p></li><li><p>hello word</p></li></ol><p><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/llm%E5%9B%9E%E7%AD%94%E4%BB%8E%E6%96%87%E6%A1%A3%E8%AF%BB%E5%8F%96%E5%86%85%E5%AE%B9.png"></p><h4 id="OpenWebUI安装"><a href="#OpenWebUI安装" class="headerlink" title="OpenWebUI安装"></a>OpenWebUI安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker pull ghcr.io/open-webui/open-webui:main   </span><br><span class="line">#创建数据存储路径</span><br><span class="line">mkdir -p /opt/openwebui/data</span><br><span class="line">#给定访问权限</span><br><span class="line">chmod 777 -R /opt/openwebui</span><br><span class="line">#docker运行</span><br><span class="line">docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway \</span><br><span class="line">-v open-webui:/app/backend/data --name open-webui \</span><br><span class="line">--restart always ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h</summary>
      
    
    
    
    <category term="乱弹" scheme="https://qdteng.online/categories/%E4%B9%B1%E5%BC%B9/"/>
    
    
    <category term="AI" scheme="https://qdteng.online/tags/AI/"/>
    
    <category term="大模型" scheme="https://qdteng.online/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="本地智库" scheme="https://qdteng.online/tags/%E6%9C%AC%E5%9C%B0%E6%99%BA%E5%BA%93/"/>
    
    <category term="LobeChat" scheme="https://qdteng.online/tags/LobeChat/"/>
    
    <category term="Ollama" scheme="https://qdteng.online/tags/Ollama/"/>
    
  </entry>
  
  <entry>
    <title>重新认识一下linux</title>
    <link href="https://qdteng.online/2024/10/23/%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86%E4%B8%80%E4%B8%8Blinux/"/>
    <id>https://qdteng.online/2024/10/23/%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86%E4%B8%80%E4%B8%8Blinux/</id>
    <published>2024-10-23T00:01:44.000Z</published>
    <updated>2024-10-23T00:49:53.481Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><pre><code>    最早接触linux应该是在08年左右，最初的给定印象来自于专注运维工作的一个朋友考取Redhat证书。那会便认为Redhat是linux最好的吧，所以后来大概近10年左右本人都是鉴定的CenterOS支持者</code></pre><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://blog.csdn.net/daobaqin/article/details/121109055">一图看懂Linux发行版本分支</a></li><li><a href="https://blog.csdn.net/qq_42428258/article/details/107719006">Linux系统发行版大全</a></li><li><a href="https://blog.csdn.net/tojohnonly/article/details/77091860">Linux操作系统分类简介</a></li></ul><p><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/linux内核族谱.png"  width="900" height="500" /></p><h3 id="个人见解"><a href="#个人见解" class="headerlink" title="个人见解"></a>个人见解</h3><ul><li>注： “信创”这个词最早来源于“信创工委会”。该组织的全称是：信息技术应用创新工作委员会，是在2016年，由24家专业从事软硬件关键技术研究及应用的国内单位，共同发起成立的一个非营利性社会组织。</li></ul><h4 id="从linux使用方向考虑，既然选择linux无非是考虑信创、开发应用、服务器应用，接下来从这3个方向谈谈"><a href="#从linux使用方向考虑，既然选择linux无非是考虑信创、开发应用、服务器应用，接下来从这3个方向谈谈" class="headerlink" title="从linux使用方向考虑，既然选择linux无非是考虑信创、开发应用、服务器应用，接下来从这3个方向谈谈"></a>从linux使用方向考虑，既然选择linux无非是考虑信创、开发应用、服务器应用，接下来从这3个方向谈谈</h4><h5 id="信创"><a href="#信创" class="headerlink" title="信创"></a>信创</h5><ul><li>国内信创常见如：深度linux、麒麟linux这两大阵营在使用习惯上来说偏向于Debian、Ubuntu；并且包管理方式都是apt-get&#x2F;dpkg;</li></ul><h5 id="开发应用"><a href="#开发应用" class="headerlink" title="开发应用"></a>开发应用</h5><ul><li>大部分使用linux开发的同学都是属于开发跨平台的应用，在linux操作上，用到的平时看文档、写代码的编辑器等等当然是越易于操作越稳定越受欢迎；在桌面应用方面我认为ubuntu、centos、debian、opensuse等发行版都是比较不错的选择，但是让我选择首选的是ubuntu，因为其使用习惯易用性上确实优化的到位；</li></ul><h5 id="服务器应用"><a href="#服务器应用" class="headerlink" title="服务器应用"></a>服务器应用</h5><ul><li>我想使用linux最多的应该是从这方面考虑的朋友了；我猜在服务器应用方面大家都是喜欢使用命令行界面的，在编写shell、配置应用参数方面，命令行足以，重点是运维效率高。那在服务器搭建初期，最头疼的应该是那种离线部署的环境，尤其是不能访问互联网，这给运维的相关同事带来了不少曲折。从这点我们又回到了安装包管理器的考虑；谁不喜欢windows.exe一键安装式的快感呢？毕竟在安装软件时这依赖那依赖总让人有一种便秘的感觉！</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>从以上3个方面看，既然前两者都偏向了debian阵营，那最后的服务器选择是不是考虑debian更省心省力呢？有人可能会说redhat更稳定，但是从我近3年的实践看debian也是非常稳定，有一些linux平台的应用反而对apt-get&#x2F;dpkg的安装包支持更广泛，从个人使用来说更是越来越亲近，不像centeros坚如磐石，充满了机器的味道</li></ul><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;    最早接触linux应该是在08年左右，最初的给定印象来自于专注运维工作的一个朋友考取Redhat证书。那会便认为Re</summary>
      
    
    
    
    <category term="-运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="-linux" scheme="https://qdteng.online/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux离线安装包的下载</title>
    <link href="https://qdteng.online/2024/10/23/linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    <id>https://qdteng.online/2024/10/23/linux%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD/</id>
    <published>2024-10-22T23:52:47.000Z</published>
    <updated>2024-10-23T01:07:18.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://qdteng.online/2024/10/23/%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86%E4%B8%80%E4%B8%8Blinux/">重新认识一下linux</a></p><h2 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h2><h3 id="apt-get-dpkg"><a href="#apt-get-dpkg" class="headerlink" title="apt-get&#x2F;dpkg"></a>apt-get&#x2F;dpkg</h3><h4 id="aptitude"><a href="#aptitude" class="headerlink" title="aptitude"></a>aptitude</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装aptitude</span></span><br><span class="line">apt install aptitude</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用 <span class="built_in">sudo</span> aptitude --download-only install &lt;package-name&gt; 例如：</span></span><br><span class="line">sudo aptitude --download-only install ros-melodic-rosbridge-server</span><br></pre></td></tr></table></figure><h4 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">xxx是待下载的安装包</span></span><br><span class="line">apt-get -d install xxx </span><br></pre></td></tr></table></figure><h4 id="离线安装-deb文件"><a href="#离线安装-deb文件" class="headerlink" title="离线安装.deb文件"></a>离线安装.deb文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure><h2 id="redhat"><a href="#redhat" class="headerlink" title="redhat"></a>redhat</h2><h3 id="rpm-yum"><a href="#rpm-yum" class="headerlink" title="rpm&#x2F;yum"></a>rpm&#x2F;yum</h3><h4 id="repotrack"><a href="#repotrack" class="headerlink" title="repotrack"></a>repotrack</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装yum-utils</span></span><br><span class="line">yum -y install yum-utils</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载 ansible 全量依赖包</span></span><br><span class="line">repotrack ansible</span><br></pre></td></tr></table></figure><h4 id="downloadonly插件"><a href="#downloadonly插件" class="headerlink" title="downloadonly插件"></a>downloadonly插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在线安装downloadonly</span></span><br><span class="line">yum install yum-plugin-downloadonly</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">格式：yum install –downloadonly –downloaddir= your-dir package-name，如：</span></span><br><span class="line">yum install --downloadonly --downloaddir=/data/rpm nmap</span><br></pre></td></tr></table></figure><h4 id="安装离线rpm-包"><a href="#安装离线rpm-包" class="headerlink" title="安装离线rpm 包"></a>安装离线rpm 包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh foo-1.0-l.i386.rpm</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">加上 --force --nodeps －－－－－－强行安装－－－</span></span><br><span class="line">rpm -ivh telnet-server-0.17-38.el5.i386.rpm --force --nodeps</span><br><span class="line">rpm -ivh *.rpm --force --nodeps</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://qdteng.online/2024/10/23/%E9%87%8D%E6%96%B0%E8%AE%A4%</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="linux" scheme="https://qdteng.online/tags/linux/"/>
    
    <category term="apt-get/dpkg" scheme="https://qdteng.online/tags/apt-get-dpkg/"/>
    
    <category term="rpm/yum" scheme="https://qdteng.online/tags/rpm-yum/"/>
    
  </entry>
  
  <entry>
    <title>聊聊企微接入微信实现消息通知的推送</title>
    <link href="https://qdteng.online/2024/10/22/%E8%81%8A%E8%81%8A%E4%BC%81%E5%BE%AE%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%E7%9A%84%E6%8E%A8%E9%80%81/"/>
    <id>https://qdteng.online/2024/10/22/%E8%81%8A%E8%81%8A%E4%BC%81%E5%BE%AE%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%E7%9A%84%E6%8E%A8%E9%80%81/</id>
    <published>2024-10-22T00:55:53.000Z</published>
    <updated>2024-10-22T03:09:40.782Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><ul><li>某些业务场景最好能接入微信实现告警消息的实时推送<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/企微消息推送至微信.png"  width="200" height="380" /></li><li>某些业务场景最好能够在小程序、公众号等界面上实现实时客服接入聊天<br> <br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/微信发送消息至企业微信客服.png"  width="200" height="380" /></li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://blog.csdn.net/weixin_44505713/article/details/130177269">通过企业微信实现消息推送到个人微信</a></li><li><a href="https://developer.work.weixin.qq.com/document/path/90236#id%E8%BD%AC%E8%AF%91%E8%AF%B4%E6%98%8E">发送应用消息id转译说明</a></li><li><a href="https://developers.weixin.qq.com/community/develop/article/doc/00026406fbcdd8c2192d4bde85b013">小程序配置企业微信客服，获取企业ID和客服链接的教程</a></li><li><a href="https://work.weixin.qq.com/wework_admin/frame#messageList">企业微信后台管理</a></li><li><a href="https://developer.work.weixin.qq.com/document/path/90664">企业微信服务端开发文档</a></li><li><a href="https://work.weixin.qq.com/wework_admin/auth_center_for_mobile?verify_status=%251$s#/">企业微信认证官方说明</a></li><li><a href="https://gitee.com/binary/weixin-java-tools">WxJava</a></li><li><a href="https://github.com/HqWu-HITCS/Awesome-Chinese-LLM?tab=readme-ov-file">开源大语言模型集合</a></li><li><a href="https://cloud.tencent.com/developer/article/2424646">推荐5款AI开源项目</a></li><li><a href="https://zhuanlan.zhihu.com/p/675887955">GitHub上有哪些值得关注的AI开源项目</a></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre><code>场景预定中...</code></pre><hr><p>待更</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;某些业务场景最好能接入微信实现告警消息的实时推送&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubuser</summary>
      
    
    
    
    <category term="乱弹" scheme="https://qdteng.online/categories/%E4%B9%B1%E5%BC%B9/"/>
    
    
    <category term="AI" scheme="https://qdteng.online/tags/AI/"/>
    
    <category term="大模型" scheme="https://qdteng.online/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="java" scheme="https://qdteng.online/tags/java/"/>
    
    <category term="微信消息推送" scheme="https://qdteng.online/tags/%E5%BE%AE%E4%BF%A1%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    
    <category term="企业微信" scheme="https://qdteng.online/tags/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1/"/>
    
    <category term="微信告警" scheme="https://qdteng.online/tags/%E5%BE%AE%E4%BF%A1%E5%91%8A%E8%AD%A6/"/>
    
    <category term="微信机器人" scheme="https://qdteng.online/tags/%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>springboot应用如何优雅的关闭</title>
    <link href="https://qdteng.online/2024/10/22/springboot%E5%BA%94%E7%94%A8%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%85%B3%E9%97%AD/"/>
    <id>https://qdteng.online/2024/10/22/springboot%E5%BA%94%E7%94%A8%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%85%B3%E9%97%AD/</id>
    <published>2024-10-22T00:11:53.000Z</published>
    <updated>2024-10-22T02:47:14.805Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><pre><code>某个项目中采用多中间件、多线程、定时任务等的技术实现，项目启动后，需要优雅的关闭项目，避免项目直接关闭导致某些未运行完成的子进程强制关闭项目数据丢失或部分事务未完成提交。</code></pre><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://cloud.tencent.com/developer/article/2223139">SpringBoot 优雅停机的正确姿势</a></li><li><a href="https://segmentfault.com/a/1190000044723362">面试官：SpringBoot如何优雅停机</a></li><li><a href="https://blog.csdn.net/weixin_44606481/article/details/132218666">Spring Boot 项目优雅关闭</a></li></ul><h3 id="kill-杀死进程"><a href="#kill-杀死进程" class="headerlink" title="kill 杀死进程"></a>kill 杀死进程</h3><ol><li>kill -2 pid<br><br>向指定 pid 发送 SIGINT 中断信号，等同于 ctrl+c。也就说，不仅当前进程会收到该信号，而且它的子进程也会收到终止的命令。</li><li>kill -9 pid<br><br>向指定 pid 发送 SIGKILL 立即终止信号。程序不能捕获该信号，最粗暴最快速结束程序的方法。</li><li>kill -15 pid<br><br>向指定 pid 发送 SIGTERM 终止信号。信号会被当前进程接收到，但它的子进程不会收到，如果当前进程被 kill 掉，它的的子进程的父进程将变成 init 进程 (init 进程是那个 pid 为 1 的进程)。</li><li>kill pid<br><br>等同于 kill 15 pid。</li></ol><ul><li><strong>在以上命令中，我们不能使用“kill -9”来杀死进程，使用“kill”杀死进程即可。</strong></li></ul><h3 id="方案一-采用"><a href="#方案一-采用" class="headerlink" title="方案一 (采用)"></a>方案一 (采用)</h3><p>采用springboot actuator 优雅停机方案</p><ol><li>pom.xml 添加 spring-boot-starter-actuator 引用<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li>yml 配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">lifecycle:</span></span><br><span class="line">    <span class="comment"># 优雅下线超时时间</span></span><br><span class="line">    <span class="attr">timeout-per-shutdown-phase:</span> <span class="string">1m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露 shutdown 接口 这个端口和服务地址是独立的，非springboot 的启动端口</span></span><br><span class="line"><span class="comment"># 调用 curl -X POST http://127.0.0.1:18080/actuator/shutdown</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="comment">### 端口</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">18001</span></span><br><span class="line">    <span class="comment">### 允许服务地址</span></span><br><span class="line">    <span class="attr">address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="comment">### 是否开启下线 默认关闭</span></span><br><span class="line">    <span class="attr">shutdown:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="comment">### 暴露接口</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">shutdown</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><ol><li>yml配置graceful<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启优雅停机，默认值：immediate 为立即关闭</span></span><br><span class="line"><span class="string">server.shutdown=graceful</span></span><br><span class="line"><span class="comment"># 设置缓冲期，最大等待时间，默认：30秒</span></span><br><span class="line"><span class="string">spring.lifecycle.timeout-per-shutdown-phase=60s</span></span><br></pre></td></tr></table></figure></li><li>Tomcat 容器关闭实现<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TomcatGracefulShutdown</span> <span class="keyword">implements</span> <span class="title class_">TomcatConnectorCustomizer</span>, ApplicationListener&lt;ContextClosedEvent&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> Connector connector;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">customize</span><span class="params">(Connector connector)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.connector = connector;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onApplicationEvent</span><span class="params">(ContextClosedEvent contextClosedEvent)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.connector.pause();</span><br><span class="line">        <span class="type">Executor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="built_in">this</span>.connector.getProtocolHandler().getExecutor();</span><br><span class="line">        <span class="keyword">if</span> (executor <span class="keyword">instanceof</span> ThreadPoolExecutor) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                log.info(<span class="string">&quot;Start to shutdown tomcat thread pool&quot;</span>);</span><br><span class="line">                <span class="type">ThreadPoolExecutor</span> <span class="variable">threadPoolExecutor</span> <span class="operator">=</span> (ThreadPoolExecutor) executor;</span><br><span class="line">                threadPoolExecutor.shutdown();</span><br><span class="line">                <span class="keyword">if</span> (!threadPoolExecutor.awaitTermination(<span class="number">20</span>, TimeUnit.SECONDS)) &#123;</span><br><span class="line">                    log.warn(<span class="string">&quot;Tomcat thread pool did not shutdown gracefully within 20 seconds. &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                log.warn(<span class="string">&quot;Fail to shut down tomcat thread pool &quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>Tomcat 自动装配<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123;Servlet.class, Tomcat.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">TomcatConfiguration</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TomcatGracefulShutdown <span class="title function_">tomcatGracefulShutdown</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TomcatGracefulShutdown</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> EmbeddedServletContainerFactory <span class="title function_">tomcatEmbeddedServletContainerFactory</span><span class="params">(TomcatGracefulShutdown gracefulShutdown)</span> &#123;</span><br><span class="line">        <span class="type">TomcatEmbeddedServletContainerFactory</span> <span class="variable">tomcatFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TomcatEmbeddedServletContainerFactory</span>();</span><br><span class="line">        tomcatFactory.addConnectorCustomizers(gracefulShutdown);</span><br><span class="line">        <span class="keyword">return</span> tomcatFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;某个项目中采用多中间件、多线程、定时任务等的技术实现，项目启动后，需要优雅的关闭项目，避免项目直接关闭导致某些未运行完成的子</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="springboot" scheme="https://qdteng.online/tags/springboot/"/>
    
    <category term="actuator" scheme="https://qdteng.online/tags/actuator/"/>
    
    <category term="java" scheme="https://qdteng.online/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>nginx日志</title>
    <link href="https://qdteng.online/2024/10/16/nginx%E6%97%A5%E5%BF%97/"/>
    <id>https://qdteng.online/2024/10/16/nginx%E6%97%A5%E5%BF%97/</id>
    <published>2024-10-16T00:31:18.000Z</published>
    <updated>2024-10-16T01:25:45.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nignx的日志类型"><a href="#Nignx的日志类型" class="headerlink" title="Nignx的日志类型"></a>Nignx的日志类型</h2><p>我们进入到nginx目录下的log目录中，可以看到里面存放着三个文件，分别是access.log，error.log和nginx.pid文件，其中nginx.pid是用来记录当前nginx进程的pid号的，不属于日志文件。真正属于日志文件的是另外两个文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- 1 root root 90261926 Jun  9 09:38 access.log</span><br><span class="line">-rw-r--r-- 1 root root 21159964 Jun  8 16:36 error.log</span><br><span class="line">-rw-r--r-- 1 root root        5 May 24 15:18 nginx.pid</span><br></pre></td></tr></table></figure><h3 id="access-log日志文件"><a href="#access-log日志文件" class="headerlink" title="access.log日志文件"></a>access.log日志文件</h3><h4 id="1、access-log文件的介绍"><a href="#1、access-log文件的介绍" class="headerlink" title="1、access.log文件的介绍"></a>1、access.log文件的介绍</h4><p>access文件用于存放每个用户访问网站的请求日志，开发运维人员通过访问日志来分析用户的浏览器行为。默认情况下，nginx会在log目录下生成该文件，无需用户配置。<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/nginx-log-1.png"   /></p><h4 id="2、access-log的相关配置"><a href="#2、access-log的相关配置" class="headerlink" title="2、access.log的相关配置"></a>2、access.log的相关配置</h4><p>我们可以在$nginx_home&#x2F;conf&#x2F;nginx.conf配置文件中对nginx请求日志进行配置。配置的格式为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];</span><br></pre></td></tr></table></figure><p>其中，access_log是关键字，表示接下来的配置是关于access日志的配置，path为该日志文件的存储路径，后面还可以对日志输出格式、是否压缩、日志刷新时间等设置进行配置。可能有读者会留意到，上面截图中的用例在path后面写上了main，其实这里的main并不是什么关键字，而是nginx默认定义好的一个日志格式名称，我们可以在log_format中看到，nginx默认定义了一个名为main的日志输出格式。</p><p><strong>关于日志输出格式的配置</strong><br>nginx自带了一些变量，让我们能够作为日志输出格式进行配置，方便我们对用户的请求进行查询和统计。当然了，nginx其实默认的日志输出格式其实就已经把一些重要的请求参数保存到访问日志里面了，基本满足我们日常使用了，如果有需要可以根据下面的表单自定义配置所需要的日志格式。</p><table><thead><tr><th>参数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>$remote_addr</td><td>客户端地址</td><td>211.28.65.253</td></tr><tr><td>$remote_user</td><td>客户端用户名称</td><td>–</td></tr><tr><td>$time_local</td><td>访问时间和时区</td><td>18&#x2F;Jul&#x2F;2012:17:00:01 +0800</td></tr><tr><td>$request</td><td>请求的URI和HTTP协议</td><td>“GET &#x2F;article-10000.html HTTP&#x2F;1.1”</td></tr><tr><td>$http_host</td><td>请求地址，即浏览器中你输入的地址（IP或域名）</td><td><a href="http://www.wang.com/">www.wang.com</a> 192.168.100.100</td></tr><tr><td>$status</td><td>HTTP请求状态</td><td>200</td></tr><tr><td>$upstream_status</td><td>upstream状态</td><td>200</td></tr><tr><td>$body_bytes_sent</td><td>发送给客户端文件内容大小</td><td>1547</td></tr><tr><td>$http_referer</td><td>URL跳转来源</td><td><a href="https://www.baidu.com/">https://www.baidu.com/</a></td></tr><tr><td>$http_user_agent</td><td>用户终端浏览器等信息</td><td>“Mozilla&#x2F;4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident&#x2F;4.0; SV1; GTB7.0; .NET4.0C;”</td></tr><tr><td>$ssl_protocol</td><td>SSL协议版本</td><td>TLSv1</td></tr><tr><td>$ssl_cipher</td><td>交换数据中的算法</td><td>RC4-SHA</td></tr><tr><td>$upstream_addr</td><td>后台upstream的地址，即真正提供服务的主机地址</td><td>10.10.10.100:80</td></tr><tr><td>$request_time</td><td>整个请求的总时间</td><td>0.205</td></tr><tr><td>$upstream_response_time</td><td>请求过程中，upstream响应时间</td><td>0.002</td></tr></tbody></table><p>下面我们来简单地自定义一个日志输出格式，并且应用起来。</p><h5 id="步骤一：在http标签下新增一个log-format格式"><a href="#步骤一：在http标签下新增一个log-format格式" class="headerlink" title="步骤一：在http标签下新增一个log_format格式"></a>步骤一：在http标签下新增一个log_format格式</h5><p><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/nginx-log-2.png"   /></p><h5 id="步骤二：在server标签中应用定义新的access-log配置"><a href="#步骤二：在server标签中应用定义新的access-log配置" class="headerlink" title="步骤二：在server标签中应用定义新的access_log配置"></a>步骤二：在server标签中应用定义新的access_log配置</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 9600;</span><br><span class="line">        location / &#123;</span><br><span class="line">                root html;</span><br><span class="line">                access_log logs/mine_access.log mine_format;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="步骤三：使用nginx-s-reload重新加载配置文件"><a href="#步骤三：使用nginx-s-reload重新加载配置文件" class="headerlink" title="步骤三：使用nginx -s reload重新加载配置文件"></a>步骤三：使用nginx -s reload重新加载配置文件</h5><p>（注意，如果这里提示说日志文件不存在的话，就自己先手动建一下文件即可）<br>自己手动访问几次服务，就可以看到新生成的日志格式会和我们定义的日志格式一致了。<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/nginx-log-3.png"   /></p><p><strong>关于刷新时间的配置</strong><br>nginx默认情况下对访问日志是实时记录的，其实一定程度上来说是会占用cpu资源的，当然了大部分站点其实访问量并不大，所以实时记录日志所带来的性能消耗是可以忽略的。如果说对于访问量大且对性能要求较高的站点，可能会希望通过优化日志的输出频率来达到减少IO的效果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  root html;</span><br><span class="line">  access_log logs/mine_access.gz mine_format gzip flush=5s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看一下官方对这个配置的介绍<br>配置完flush和buffer后，其实我们就相当于是有两个记录日志的节点了，一个是缓冲区满了，另外一个是到刷新日志的时间点了。缓冲区的存在使得nginx不需要针对每一个请求都做一次IO，可以节省一点系统资源。当然了，我们还可以开启gzip压缩（可选等级为1-9，级别越高压缩级别越高）来进一步减轻磁盘压力。<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/nginx-log-4.png"   /></p><p><strong>关闭访问日志的记录</strong><br>只需要配置access_log为off即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root html;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="error-log错误日志"><a href="#error-log错误日志" class="headerlink" title="error.log错误日志"></a>error.log错误日志</h3><p>相比于访问日志来说，运维人员可能更加关注错误日志文件，错误日志文件记录了nginx运行过程中遇到的错误信息（注意，也包括用户请求没有正常响应的错误日志），向有时候我们nginx启动失败后，都可以在这个error日志中找到对应较为详情的报错信息。<br>这里贴一下官网对error.log的介绍，该错误日志的配置格式为：error_log path level，error_log为关键字，path为日志保存的路径，level为日志级别。默认情况下nginx会在logs目录下建立一个名为error.log的日志文件，且日志级别为error。可选的日志级别配置从低到高分别为debug, info, notice, warn, error, crit, alert, emerg。<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/nginx-log-5.png"   /><br>我们可以简单演示一下，这个错误日志的用法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 9600;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root html;</span><br><span class="line">        access_log logs/mine_access.log mine_format;</span><br><span class="line">        error_log logs/mine_error.log warn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完后reload一下nginx配置，然后在浏览器中随意访问一下不存在的资源，我们就可以在日志文件里面看到相关的错误日志了。</p><p><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/nginx-log-6.png"   /></p><h2 id="Nignx的日志分割"><a href="#Nignx的日志分割" class="headerlink" title="Nignx的日志分割"></a>Nignx的日志分割</h2><p>nginx默认是不会进行日志文件的分割操作的，也就是所有访问日志会一直往access.log文件里面追加，时间一长的话这个文件就会变得很大，nginx的性能也会降低,而且运维人员在查看当天文件的也很不方便。所以一般来说，我们都会选择按日对日志文件进行切割。</p><h3 id="logrotate结合crontab日志切割"><a href="#logrotate结合crontab日志切割" class="headerlink" title="logrotate结合crontab日志切割"></a>logrotate结合crontab日志切割</h3><p> vi &#x2F;etc&#x2F;logrotate.d&#x2F;nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/var/log/nginx/*.log /var/log/nginx/*.html &#123;</span><br><span class="line">    minsize 1024M</span><br><span class="line">    # 指定新建的日志文件权限以及所属用户和组</span><br><span class="line">    create 0644 nginx root</span><br><span class="line">    # 每月一次切割,取代默认的一周</span><br><span class="line">    monthly</span><br><span class="line">    #只保留一个日志.</span><br><span class="line">    rotate 3</span><br><span class="line">    missingok</span><br><span class="line">    dateext</span><br><span class="line">    notifempty</span><br><span class="line">    compress</span><br><span class="line">    delaycompress</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">    if [ -f /usr/local/nginx/logs/nginx.pid ]; then</span><br><span class="line">        kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`</span><br><span class="line">    fi</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="logrotate参数说明"><a href="#logrotate参数说明" class="headerlink" title="logrotate参数说明"></a>logrotate参数说明</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置   <span class="comment"># 说明</span></span></span><br><span class="line">daily# 指定转储周期为每天</span><br><span class="line">weekly# 指定转储周期为每周</span><br><span class="line">monthly# 指定转储周期为每月</span><br><span class="line">rotate count# 指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份</span><br><span class="line">compress# 通过gzip 压缩转储以后的日志</span><br><span class="line">nocompress# 不做gzip压缩处理</span><br><span class="line">create mode owner group# 轮转时指定创建新文件的属性，如create 0777 nobody nobody</span><br><span class="line">nocreate# 不建立新的日志文件</span><br><span class="line">delaycompress# 和compress 一起使用时，转储的日志文件到下一次转储时才压缩</span><br><span class="line">nodelaycompress# 覆盖 delaycompress 选项，转储同时压缩</span><br><span class="line">missingok# 如果日志丢失，不报错继续滚动下一个日志</span><br><span class="line">ifempty# 即使日志文件为空文件也做轮转，这个是logrotate的缺省选项</span><br><span class="line">notifempty# 当日志文件为空时，不进行轮转</span><br><span class="line">mail address# 把转储的日志文件发送到指定的E-mail 地址</span><br><span class="line">olddir directory # 转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统</span><br><span class="line">noolddir# 转储后的日志文件和当前日志文件放在同一个目录下</span><br><span class="line">sharedscripts# 运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本</span><br><span class="line">prerotate# 在logrotate转储之前需要执行的指令，例如修改文件的属性等动作；必须独立成行</span><br><span class="line">postrotate# 在logrotate转储之后需要执行的指令，例如重新启动 (kill -HUP) 某个服务！必须独立成行</span><br><span class="line">dateext# 使用当期日期作为命名格式</span><br><span class="line">dateformat .%s# 配合dateext使用，紧跟在下一行出现，定义文件切割后的文件名，必须配合dateext使用，只支持 %Y %m %d %s 这四个参数</span><br><span class="line">size(minsize) log-size# 当日志文件到达指定的大小时才转储，log-size能指定bytes(缺省)及KB (sizek)或MB(sizem)，例如 size 100M</span><br></pre></td></tr></table></figure><h3 id="配置crontab定时任务"><a href="#配置crontab定时任务" class="headerlink" title="配置crontab定时任务"></a>配置crontab定时任务</h3><p>crontab -e 配置 每月1日1点分割一次文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 1 1 * ? /usr/sbin/logrotate -vf /etc/logrotate.d/nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nignx的日志类型&quot;&gt;&lt;a href=&quot;#Nignx的日志类型&quot; class=&quot;headerlink&quot; title=&quot;Nignx的日志类型&quot;&gt;&lt;/a&gt;Nignx的日志类型&lt;/h2&gt;&lt;p&gt;我们进入到nginx目录下的log目录中，可以看到里面存放着三个文件，分别是</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="linux" scheme="https://qdteng.online/tags/linux/"/>
    
    <category term="nginx" scheme="https://qdteng.online/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>谈谈clickhouse优化</title>
    <link href="https://qdteng.online/2024/10/14/%E8%B0%88%E8%B0%88clickhouse%E4%BC%98%E5%8C%96/"/>
    <id>https://qdteng.online/2024/10/14/%E8%B0%88%E8%B0%88clickhouse%E4%BC%98%E5%8C%96/</id>
    <published>2024-10-14T05:51:03.000Z</published>
    <updated>2024-11-02T01:08:26.305Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ClickHouse版本"><a href="#ClickHouse版本" class="headerlink" title="ClickHouse版本"></a>ClickHouse版本</h3><p>23.10.1.396</p><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/内存过高显示.png"  width="600" height="200" /><p>情况如上图，项目运行一段时间，随着数据的累计，服务器内存占用率已经接近100%，通过top命令查看内存占用情况，发现clickhouse进程占用了80%的内存，导致服务器内存占用率接近100%</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><p>[1] <a href="https://blog.csdn.net/qq_38651064/article/details/120930481">Clickhouse常见配置解析</a></p></li><li><p>[2] <a href="https://blog.csdn.net/guaoran/article/details/125561361">Clickhouse 参数优化配置</a></p><h3 id="一轮优化"><a href="#一轮优化" class="headerlink" title="一轮优化"></a>一轮优化</h3></li></ul><p>比较匆忙的看了资料，配置文件中有这样一个描述 ,于是将其改成了8G看看效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Maximum memory usage (resident set size) for server process.</span><br><span class="line">     Zero value or unset means default. Default is &quot;max_server_memory_usage_to_ram_ratio&quot; of available physical RAM.</span><br><span class="line">     If the value is larger than &quot;max_server_memory_usage_to_ram_ratio&quot; of available physical RAM, it will be cut down.</span><br><span class="line"></span><br><span class="line">     The constraint is checked on query execution time.</span><br><span class="line">     If a query tries to allocate memory and the current memory usage plus allocation is greater</span><br><span class="line">      than specified threshold, exception will be thrown.</span><br><span class="line"></span><br><span class="line">     It is not practical to set this constraint to small values like just a few gigabytes,</span><br><span class="line">      because memory allocator will keep this amount of memory in caches and the server will deny service of queries.</span><br><span class="line"><span class="meta prompt_">  --&gt;</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">&lt;max_server_memory_usage&gt;8G&lt;/max_server_memory_usage&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二轮优化"><a href="#二轮优化" class="headerlink" title="二轮优化"></a>二轮优化</h3><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/clickhouse超过内存限制报错.png"  width="900" height="100" /><p> 在运行了大概2个月之后，情况没有改善，内存仍然继续增长，但是本次的提示如上图超过的数值跟我文件中配置的数值有偏差，当然中间也尝试过配置<br>使用类似 SET max_memory_usage &#x3D; 3 * 1024 * 1024 * 1024; 这样的语句去动态配置，但是使用如下语句查询返回还是没变化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">select  *  from `system`.settings  where name in(</span><br><span class="line">        &#x27;max_memory_usage_for_user&#x27;, </span><br><span class="line">        &#x27;max_memory_usage&#x27;, </span><br><span class="line">        &#x27;max_bytes_before_external_group_by&#x27;, </span><br><span class="line">        &#x27;max_bytes_before_external_sort&#x27;, </span><br><span class="line">        &#x27;max_memory_usage_for_all_queries&#x27;, </span><br><span class="line">        &#x27;max_concurrent_queries_for_user&#x27;,</span><br><span class="line">        &#x27;max_concurrent_queries_for_all_users&#x27;,</span><br><span class="line">        &#x27;max_concurrent_queries&#x27;,</span><br><span class="line">        &#x27;max_server_memory_usage&#x27;,</span><br><span class="line">        &#x27;max_server_memory_usage_to_ram_ratio&#x27;,</span><br><span class="line">        &#x27;max_thread_pool_size&#x27;,</span><br><span class="line">        &#x27;distributed_aggregation_memory_efficient&#x27;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>后来增加了配置项 </p><h4 id="config-xml"><a href="#config-xml" class="headerlink" title="config.xml"></a>config.xml</h4><ul><li><p>max_server_memory_usage_to_ram_ratio <br/><br>这里按照总内存的百分比计算</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;clickhouse&gt;</span><br><span class="line">  &lt;!-- On memory constrained environments you may have to set this to value larger than 1.--&gt;</span><br><span class="line">  &lt;max_server_memory_usage_to_ram_ratio&gt;0.2&lt;/max_server_memory_usage_to_ram_ratio&gt;</span><br><span class="line">&lt;/clickhouse&gt;    </span><br></pre></td></tr></table></figure></li></ul><h4 id="users-xml"><a href="#users-xml" class="headerlink" title="users.xml"></a>users.xml</h4><ul><li><p>max_bytes_before_external_group_by</p></li><li><p>max_bytes_before_external_sort <br/><br>这里设置分组查询和排序时内存的最大使用阈值1G，超过使用硬盘</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;clickhouse&gt;</span><br><span class="line">  &lt;profiles&gt;</span><br><span class="line">      &lt;default&gt;</span><br><span class="line">        &lt;max_bytes_before_external_group_by&gt;1073741824&lt;/max_bytes_before_external_group_by&gt;</span><br><span class="line">        &lt;max_bytes_before_external_sort&gt;1073741824&lt;/max_bytes_before_external_sort&gt;</span><br><span class="line">      &lt;/default&gt;</span><br><span class="line">  &lt;profiles&gt;</span><br><span class="line">&lt;/clickhouse&gt;    </span><br></pre></td></tr></table></figure><p>2024-10-14 15:08:09  后面跟进看看优化效果</p><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/ck2轮优化结果.png"  width="600" height="200" /></li></ul><h3 id="三轮优化"><a href="#三轮优化" class="headerlink" title="三轮优化"></a>三轮优化</h3><p>控制内存有点治标不治本，这次优化方面如下</p><h4 id="控制集群节点的数据存储权重"><a href="#控制集群节点的数据存储权重" class="headerlink" title="控制集群节点的数据存储权重"></a>控制集群节点的数据存储权重</h4><p>config.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;clickhouse&gt;</span><br><span class="line">    &lt;remote_servers&gt;</span><br><span class="line">        &lt;cluster_3S_1R&gt;</span><br><span class="line">             &lt;shard&gt;</span><br><span class="line">                &lt;internal_replication&gt;true&lt;/internal_replication&gt;</span><br><span class="line">                #权重</span><br><span class="line">                &lt;weight&gt;10&lt;/weight&gt;</span><br><span class="line">                &lt;replica&gt;</span><br><span class="line">                      &lt;host&gt;...&lt;/host&gt;</span><br><span class="line">                      &lt;port&gt;...&lt;/port&gt;</span><br><span class="line">                      &lt;user&gt;...&lt;/user&gt;          </span><br><span class="line">                      &lt;password&gt;...&lt;/password&gt;</span><br><span class="line">                &lt;/replica&gt;</span><br><span class="line">             &lt;/shard&gt;</span><br><span class="line"></span><br><span class="line">             &lt;shard&gt;</span><br><span class="line">                &lt;internal_replication&gt;true&lt;/internal_replication&gt;</span><br><span class="line">                #权重</span><br><span class="line">                &lt;weight&gt;45&lt;/weight&gt;</span><br><span class="line">                &lt;replica&gt;</span><br><span class="line">                      &lt;host&gt;...&lt;/host&gt;</span><br><span class="line">                      &lt;port&gt;...&lt;/port&gt;</span><br><span class="line">                      &lt;user&gt;...&lt;/user&gt;          </span><br><span class="line">                      &lt;password&gt;...&lt;/password&gt;</span><br><span class="line">                &lt;/replica&gt;</span><br><span class="line">             &lt;/shard&gt;</span><br><span class="line"></span><br><span class="line">             &lt;shard&gt;</span><br><span class="line">                &lt;internal_replication&gt;true&lt;/internal_replication&gt;</span><br><span class="line">                #权重</span><br><span class="line">                &lt;weight&gt;45&lt;/weight&gt;</span><br><span class="line">                &lt;replica&gt;</span><br><span class="line">                      &lt;host&gt;...&lt;/host&gt;</span><br><span class="line">                      &lt;port&gt;...&lt;/port&gt;</span><br><span class="line">                      &lt;user&gt;...&lt;/user&gt;          </span><br><span class="line">                      &lt;password&gt;...&lt;/password&gt;</span><br><span class="line">                &lt;/replica&gt;</span><br><span class="line">             &lt;/shard&gt;</span><br><span class="line">        &lt;/cluster_3S_1R&gt;</span><br><span class="line">    &lt;/remote_servers&gt;</span><br><span class="line">&lt;/clickhouse&gt;</span><br></pre></td></tr></table></figure><h4 id="控制数据的保存时间"><a href="#控制数据的保存时间" class="headerlink" title="控制数据的保存时间"></a>控制数据的保存时间</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table  table_data on   cluster cluster_3S_1R </span><br><span class="line">modify TTL   create_time + toIntervalDay(45) ;</span><br></pre></td></tr></table></figure><p>2024-11-02 09:00:09 后面跟进看看优化效果</p><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;ClickHouse版本&quot;&gt;&lt;a href=&quot;#ClickHouse版本&quot; class=&quot;headerlink&quot; title=&quot;ClickHouse版本&quot;&gt;&lt;/a&gt;ClickHouse版本&lt;/h3&gt;&lt;p&gt;23.10.1.396&lt;/p&gt;
&lt;h3 id=&quot;问题描述&quot;&gt;</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="clickhouse" scheme="https://qdteng.online/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>redis单机安装使用_linux</title>
    <link href="https://qdteng.online/2024/10/08/redis%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8-linux/"/>
    <id>https://qdteng.online/2024/10/08/redis%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8-linux/</id>
    <published>2024-10-08T00:08:18.000Z</published>
    <updated>2024-10-23T00:49:53.455Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>[1] <a href="https://zhuanlan.zhihu.com/p/340759575">Redis和AOF和RDB</a></li><li>[2] <a href="https://blog.csdn.net/weixin_39523456/article/details/111314475">bind与protected-mode参数</a></li></ul><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li><p>首先，使用以下命令安装所有必需的依赖项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install wget curl gnupg -y</span><br></pre></td></tr></table></figure></li><li><p>接下来，使用以下命令下载并添加 GPG 密钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.redis.io/gpg | apt-key add -</span><br></pre></td></tr></table></figure></li><li><p>接下来，使用以下命令添加 Redis 官方存储库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://packages.redis.io/deb $(lsb_release -cs) main&quot; | tee /etc/apt/sources.list.d/redis.list</span><br></pre></td></tr></table></figure></li><li><p>接下来，使用以下命令更新存储库缓存并安装 Redis：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y</span><br><span class="line">apt-get install redis-server -y</span><br></pre></td></tr></table></figure></li><li><p>安装 Redis 后，使用以下命令验证 Redis 安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache policy redis-server</span><br></pre></td></tr></table></figure></li><li><p>要启动 Redis 服务，请运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start redis-server</span><br></pre></td></tr></table></figure></li><li><p>要检查 Redis 服务的状态，请运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status redis-server</span><br></pre></td></tr></table></figure></li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>默认情况下，Redis 侦听本地主机，如果要从远程主机连接 Redis，则需要允许 Redis 进行远程连接。</p><ul><li><p>请使用您喜欢的编辑器编辑 Redis 配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/redis/redis.conf</span><br></pre></td></tr></table></figure></li><li><p>注释掉以下行： <br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这里注释掉以下行，以允许其他ip链接</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">bind</span> 127.0.0.1 -::1</span></span><br></pre></td></tr></table></figure></li><li><p>接下来，设置Redis密码，如下所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这里设置redis需要开启密码访问</span></span><br><span class="line">requirepass securepassword</span><br></pre></td></tr></table></figure></li><li><p>接下来，更改以下行：  <br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">RBD的优点是，全量数据二进制文件，数据恢复快。 缺点是，可能会丢数据;AOF会将redis中每一步对数据修改的操作记录（日志）append到相应的文件中。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这里开启AOF</span></span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">protected-mode(Redis本身的一个安全层),这里配置关闭</span></span><br><span class="line">protected-mode no</span><br></pre></td></tr></table></figure></li><li><p>保存并关闭文件，然后重新启动 Redis 服务以应用更改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart redis-server</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>连接Redis实例<br>您可以使用 redis-cli 命令行实用程序从本地或远程计算机连接 Redis 服务器。<br>在终端中输入以下命令来连接到Redis数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">redis-cli -h &lt;host&gt; -p &lt;port&gt; -a &lt;password&gt;</span></span><br><span class="line">redis-cli -h localhost -p 6379 -a mypassword</span><br></pre></td></tr></table></figure><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;https://zhuanlan.zhihu.com/p/340759575&quot;&gt;Red</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="linux" scheme="https://qdteng.online/tags/linux/"/>
    
    <category term="debian" scheme="https://qdteng.online/tags/debian/"/>
    
    <category term="redis" scheme="https://qdteng.online/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>esp32玩一玩</title>
    <link href="https://qdteng.online/2024/10/07/esp32%E7%8E%A9%E4%B8%80%E7%8E%A9/"/>
    <id>https://qdteng.online/2024/10/07/esp32%E7%8E%A9%E4%B8%80%E7%8E%A9/</id>
    <published>2024-10-07T00:15:29.000Z</published>
    <updated>2024-10-16T00:28:38.262Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>[1] <a href="https://www.zhihu.com/question/483755448">ESP32和ESP8266比较有哪些不同？</a> <br><br>[2] <a href="https://products.espressif.com/#/product-comparison">ESP32各型号比较</a> <br><br>[3] <a href="https://www.nologo.tech/product/esp32/esp32c3SuperMini/esp32C3SuperMiniFoot.html">ESP32C3SuperMini 引脚使用</a> <br><br>[4] <a href="https://blog.csdn.net/m0_60999883/article/details/136223612">使用VSCode与PlatformIO</a></p><ol><li>温度传感器：DS18B20 接入添加电阻示例<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/DS18B20温度传感电阻.png"  width="500" height="500" /></li><li>双隔离电源5V12V<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/双隔离电源5V12V.png"  width="500" height="500" /></li><li>esp32控制继电器<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/esp32控制继电器.jpg"  width="500" height="500" /></li><li>vs中 serial monitor 好用的串口调试插件<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/serialmonitor串口调试插件.png"  width="500" height="400" /></li><li>usb红白绿蓝 红白绿黑四根线分别是什么<br><br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/typec_usb线.png"  width="500" height="300" /><br></li></ol><ul><li>红色－USB电源 标有－VCC、Power、5V、5VSB字样</li><li>白色－USB数据线（负）－DATA-、USBD-、PD-、USBDT+</li><li>绿色－USB数据线（正）－DATA+、USBD+、PD+、USBDT+</li><li>黑色&#x2F;蓝色－地线 －GND、Ground</li><li>其中的红、白、绿、黑是标准的配线颜色，分别对应1、2、3、4引脚。四根线分别是 1-电源 2-数据 3-数据 4-电源，一般的排列方式是：红白绿黑从左到右。</li><li>一些分标准的为红白绿蓝四根线。但是功能都是一样的。</li></ul><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;[1] &lt;a href=&quot;https://www.zhihu.com/question/483755448&quot;&gt;ESP32和E</summary>
      
    
    
    
    <category term="后端" scheme="https://qdteng.online/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="IOT" scheme="https://qdteng.online/tags/IOT/"/>
    
    <category term="ESP32" scheme="https://qdteng.online/tags/ESP32/"/>
    
    <category term="Arduino" scheme="https://qdteng.online/tags/Arduino/"/>
    
    <category term="PlatformIO" scheme="https://qdteng.online/tags/PlatformIO/"/>
    
  </entry>
  
  <entry>
    <title>windows_server版本开启多用户同时远程登录</title>
    <link href="https://qdteng.online/2024/10/06/windows-server%E7%89%88%E6%9C%AC%E5%BC%80%E5%90%AF%E5%A4%9A%E7%94%A8%E6%88%B7%E5%90%8C%E6%97%B6%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    <id>https://qdteng.online/2024/10/06/windows-server%E7%89%88%E6%9C%AC%E5%BC%80%E5%90%AF%E5%A4%9A%E7%94%A8%E6%88%B7%E5%90%8C%E6%97%B6%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</id>
    <published>2024-10-06T02:03:41.000Z</published>
    <updated>2024-10-06T02:49:41.078Z</updated>
    
    <content type="html"><![CDATA[<h3 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h3><p>   你是不是也经常面临登陆windows server远程主机时，突然被断开，确认后是同事登陆了，然后又回来，又断开了。</p><h3 id="开启多用户登录"><a href="#开启多用户登录" class="headerlink" title="开启多用户登录"></a>开启多用户登录</h3><ul><li><a href="https://www.cnblogs.com/gb2013/p/win-server-2012-account-allow-multi-user-login.html">参考资料</a></li><li>gpedit.msc</li></ul><p>按照 计算机配置-&gt;管理模板-&gt;Windows 组件-&gt;远程桌面服务-&gt;远程桌面会话主机-&gt;连接 的路径，找到“将远程桌面服务的用户限制到单独的远程桌面会话”配置项：</p><p>选择“已禁用”选项，确定即可</p><p><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/winserver%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%BC%80%E5%90%AF%E5%A4%9A%E7%94%A8%E6%88%B7.png"></p><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;事情是这样的&quot;&gt;&lt;a href=&quot;#事情是这样的&quot; class=&quot;headerlink&quot; title=&quot;事情是这样的&quot;&gt;&lt;/a&gt;事情是这样的&lt;/h3&gt;&lt;p&gt;   你是不是也经常面临登陆windows server远程主机时，突然被断开，确认后是同事登陆了，然后又回</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="windows" scheme="https://qdteng.online/tags/windows/"/>
    
    <category term="server" scheme="https://qdteng.online/tags/server/"/>
    
    <category term="远程桌面" scheme="https://qdteng.online/tags/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装_windows</title>
    <link href="https://qdteng.online/2024/10/03/mysql%E5%AE%89%E8%A3%85-windows/"/>
    <id>https://qdteng.online/2024/10/03/mysql%E5%AE%89%E8%A3%85-windows/</id>
    <published>2024-10-03T01:37:04.000Z</published>
    <updated>2024-10-06T01:54:11.835Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://blog.csdn.net/qq_45344586/article/details/129286105">MySql免安装配置教程-CSDN</a></li><li><a href="https://blog.csdn.net/huanzi833/article/details/139906918">Server和Installer有什么区别</a></li><li><a href="https://downloads.mysql.com/archives/community/">MySQL Community Server</a></li></ul><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><p>注意：绝对路径中要避免出现中文</p><ul><li>my.ini放在mysql安装目录的根目录</li></ul><h4 id="my-ini-配置"><a href="#my-ini-配置" class="headerlink" title="my.ini 配置"></a>my.ini 配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port=3306</span><br><span class="line">#错误日志的路径</span><br><span class="line">log-error=D:\\software\mysql-8.0.32-winx64\\mysql.error.log</span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=D:\\software\mysql-8.0.32-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录，data文件夹它会自行创建，不要自己手动创建</span><br><span class="line">datadir= D:\\software\mysql-8.0.32-winx64\Data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 允许连接失败的次数。</span><br><span class="line">max_connect_errors=10</span><br><span class="line"># 服务端使用的字符集默认为utf8mb4</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"># 默认使用“mysql_native_password”插件认证</span><br><span class="line">#mysql_native_password</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line">#解决groupby查询非groupby字段问题</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">[client]</span><br><span class="line"># 设置mysql客户端连接服务端时默认使用的端口</span><br><span class="line">port=3306</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">命令行中会生成root的临时密码注意保存，首次登陆后需要修改</span></span><br><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure><h4 id="安装MySQL服务"><a href="#安装MySQL服务" class="headerlink" title="安装MySQL服务"></a>安装MySQL服务</h4> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可以删除已有的服务名</span></span><br><span class="line">sc delete mysql5</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建一个指定服务名[mysql57]的服务</span></span><br><span class="line">mysqld --install mysql57</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动指定服务,启动失败可以查看 my.ini中配置的log-error错误日志</span></span><br><span class="line">net start mysql57</span><br></pre></td></tr></table></figure><h4 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定ip  端口 用户 连接</span> </span><br><span class="line">mysql -u root -h 127.0.0.1 -P 3306  -p</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-7-用户操作"><a href="#5-7-用户操作" class="headerlink" title="5.7 用户操作"></a>5.7 用户操作</h4> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改root密码</span></span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">允许root远程访问</span></span><br><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123&#x27; with grant option;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加用户</span></span><br><span class="line">create user &#x27;user&#x27;@&#x27;%&#x27; identified by &#x27;123&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">授权某个用户所有数据库所有权限</span></span><br><span class="line">grant all privileges on *.* to &#x27;user&#x27;@&#x27;%&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除用户</span></span><br><span class="line">drop user &#x27;user&#x27;@&#x27;%&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h4 id="8-用户操作"><a href="#8-用户操作" class="headerlink" title="8.* 用户操作"></a>8.* 用户操作</h4> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改加密规则 防止一些可视化工具连接不兼容报错</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27; PASSWORD EXPIRE NEVER; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改root密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;password&#x27;; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">允许root远程访问</span></span><br><span class="line">GRANT ALL ON *.* TO &#x27;root&#x27;@&#x27;%&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加用户</span></span><br><span class="line">CREATE USER &#x27;用户名&#x27;@&#x27;%或者IP&#x27; IDENTIFIED BY &#x27;密码&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">授权某个用户所有数据库所有权限</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;用户名&#x27;@&#x27;IP/localhost/%&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除用户</span></span><br><span class="line">drop user &#x27;user&#x27;@&#x27;%&#x27;;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/qq_45344586/article/detai</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="mysql5.7.36" scheme="https://qdteng.online/tags/mysql5-7-36/"/>
    
    <category term="mysql" scheme="https://qdteng.online/tags/mysql/"/>
    
    <category term="windows" scheme="https://qdteng.online/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>navicat的另类使用</title>
    <link href="https://qdteng.online/2024/09/29/naviat%E7%9A%84%E5%8F%A6%E7%B1%BB%E4%BD%BF%E7%94%A8/"/>
    <id>https://qdteng.online/2024/09/29/naviat%E7%9A%84%E5%8F%A6%E7%B1%BB%E4%BD%BF%E7%94%A8/</id>
    <published>2024-09-29T13:21:44.000Z</published>
    <updated>2024-10-06T02:26:53.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h2><pre><code>比如项目中有一些报表需要定时生成excel，你又不想重复性操作电脑SQL查询</code></pre><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><h3 id="1-首先你得有个navicat"><a href="#1-首先你得有个navicat" class="headerlink" title="1.首先你得有个navicat"></a>1.首先你得有个navicat</h3><ul><li><a href="https://pan.baidu.com/s/1h-0X4b_5c83eyKYKaHqpKw?pwd=22b9">链接</a><br>提取码：22b9</li></ul><h3 id="2-按需编写一段业务SQL"><a href="#2-按需编写一段业务SQL" class="headerlink" title="2.按需编写一段业务SQL"></a>2.按需编写一段业务SQL</h3><p> 这个一般是个select 语句</p><h3 id="3-看图作业"><a href="#3-看图作业" class="headerlink" title="3.看图作业"></a>3.看图作业</h3><h4 id="1-创建导出任务保存配置"><a href="#1-创建导出任务保存配置" class="headerlink" title="1) 创建导出任务保存配置"></a>1) 创建导出任务保存配置</h4><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/1728180261244.jpg" width="200" height="200"  /><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/2.png" width="200" height="200"  /><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/3.png" width="200" height="200"  /><h4 id="2-新建批处理作业"><a href="#2-新建批处理作业" class="headerlink" title="2) 新建批处理作业"></a>2) 新建批处理作业</h4><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/4.png" width="200" height="200"  /><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/5.png" width="200" height="200"  /><h4 id="3-邮件配置"><a href="#3-邮件配置" class="headerlink" title="3) 邮件配置"></a>3) 邮件配置</h4><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/6.png" width="200" height="200"  /><h4 id="4-配置定时发送"><a href="#4-配置定时发送" class="headerlink" title="4) 配置定时发送"></a>4) 配置定时发送</h4><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/7.png" width="200" height="200"  /><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;事情是这样的&quot;&gt;&lt;a href=&quot;#事情是这样的&quot; class=&quot;headerlink&quot; title=&quot;事情是这样的&quot;&gt;&lt;/a&gt;事情是这样的&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;比如项目中有一些报表需要定时生成excel，你又不想重复性操作电脑SQL查询
&lt;/code&gt;</summary>
      
    
    
    
    <category term="后端" scheme="https://qdteng.online/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="windows" scheme="https://qdteng.online/tags/windows/"/>
    
    <category term="naviat" scheme="https://qdteng.online/tags/naviat/"/>
    
    <category term="定时" scheme="https://qdteng.online/tags/%E5%AE%9A%E6%97%B6/"/>
    
    <category term="报表" scheme="https://qdteng.online/tags/%E6%8A%A5%E8%A1%A8/"/>
    
    <category term="邮件" scheme="https://qdteng.online/tags/%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>https自动更新</title>
    <link href="https://qdteng.online/2024/09/29/https%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    <id>https://qdteng.online/2024/09/29/https%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</id>
    <published>2024-09-29T05:38:33.000Z</published>
    <updated>2024-10-06T01:03:44.794Z</updated>
    
    <content type="html"><![CDATA[<h3 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h3><p>你是不是也有一年又一年的新项目接入,对于要求https协议的网站，每3个月的TSL证书更新需求都要自己手动去申请<br><img src="https://github.com/qdteng-cn/qdteng/blob/main/img202409212129741.png"  width="200" height="200" /></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://cloud.tencent.com/developer/techpedia/1596">TLS证书</a></li><li><a href="https://segmentfault.com/a/1190000045287036">ACME协议</a></li><li><a href="https://github.com/acmesh-official/acme.sh">acme.sh</a></li><li><a href="https://blog.csdn.net/weixin_57025326/article/details/136286399">自动化部署证书 acme.sh 使用教程-CSDN博客</a></li></ul><h3 id="acme-sh安装"><a href="#acme-sh安装" class="headerlink" title="acme.sh安装"></a>acme.sh安装</h3><h4 id="使用源码安装："><a href="#使用源码安装：" class="headerlink" title="使用源码安装："></a>使用源码安装：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth 1 https://github.com/acmesh-official/acme.sh.git</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">国内访问 github 便秘 就用gitee</span> </span><br><span class="line">git clone --depth 1 https://gitee.com/neilpang/acme.sh.git</span><br><span class="line">cd acme.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请注意替换 username@example.com 为你自己的邮箱，避免无法收到上游证书的邮件通知。</span></span><br><span class="line">./acme.sh --install -m username@example.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装完成后重新加载 Bash</span></span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检查是否生效</span> </span><br><span class="line">acme.sh -v</span><br></pre></td></tr></table></figure><h4 id="配置-DNS-API"><a href="#配置-DNS-API" class="headerlink" title="配置 DNS API"></a>配置 DNS API</h4><p>acme.sh 程序目录为隐藏目录.acme.sh存放在当前用户家目录下.执行以下命令进入目录,并编辑account.conf,根据上文获取的 API 格式,复制粘贴到文件中保存.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd</span><br><span class="line">cd .acme.sh</span><br><span class="line">vi account.conf</span><br><span class="line"></span><br><span class="line">export Ali_Key=&quot;....&quot;</span><br><span class="line">export Ali_Secret=&quot;.....&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自动更新脚本拿走"><a href="#自动更新脚本拿走" class="headerlink" title="自动更新脚本拿走"></a>自动更新脚本拿走</h3><p>需要先配置DNS，详情见第4篇资料，此处用的阿里云</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份旧证书</span></span><br><span class="line">/bin/cp -rf /usr/local/nginx/conf/cert/*.*  /usr/local/nginx/conf/cert/sslbak</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 acme.sh 生成新证书,此处使用了绝对路径来运行acme脚本，请按照实际情况操作。/home/ecs-user是我当前用户的家目录。</span></span><br><span class="line">/root/.acme.sh/acme.sh --issue --dns dns_ali -d e1.test.com  --fullchain-file /home/setup/sslkey/e1.test.com.pem --key-file /home/setup/sslkey/e1.test.com.key --force</span><br><span class="line">/root/.acme.sh/acme.sh --issue --dns dns_ali -d e2.test.com  --fullchain-file /home/setup/sslkey/e2.test.com.pem --key-file /home/setup/sslkey/e2.test.com.key --force</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将新证书拷贝到 Nginx 证书目录</span></span><br><span class="line">/bin/cp -rf /home/setup/sslkey/* /usr/local/nginx/conf/cert</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启 Nginx 以应用新证书（请根据实际情况选择适当的重启方式）</span></span><br><span class="line">/usr/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;事情是这样的&quot;&gt;&lt;a href=&quot;#事情是这样的&quot; class=&quot;headerlink&quot; title=&quot;事情是这样的&quot;&gt;&lt;/a&gt;事情是这样的&lt;/h3&gt;&lt;p&gt;你是不是也有一年又一年的新项目接入,对于要求https协议的网站，每3个月的TSL证书更新需求都要自己手动去</summary>
      
    
    
    
    <category term="运维" scheme="https://qdteng.online/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="https" scheme="https://qdteng.online/tags/https/"/>
    
    <category term="自动化" scheme="https://qdteng.online/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    <category term="acme" scheme="https://qdteng.online/tags/acme/"/>
    
  </entry>
  
  <entry>
    <title>好东西winlaunch</title>
    <link href="https://qdteng.online/2024/09/28/%E5%A5%BD%E4%B8%9C%E8%A5%BFwinlaunch/"/>
    <id>https://qdteng.online/2024/09/28/%E5%A5%BD%E4%B8%9C%E8%A5%BFwinlaunch/</id>
    <published>2024-09-28T01:59:48.000Z</published>
    <updated>2024-10-06T02:54:36.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p><a href="https://winlaunch.org/">连接</a></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>你可以在这个软件中添加本机安装的软件连接，尤其是安装在非C盘的软件，在重装系统后依然可以继续使用</p><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://winlaunch.org/&quot;&gt;连接&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; </summary>
      
    
    
    
    <category term="乱弹" scheme="https://qdteng.online/categories/%E4%B9%B1%E5%BC%B9/"/>
    
    
    <category term="windows" scheme="https://qdteng.online/tags/windows/"/>
    
    <category term="winlaunch" scheme="https://qdteng.online/tags/winlaunch/"/>
    
    <category term="软件" scheme="https://qdteng.online/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>非主流监控hertzbeat</title>
    <link href="https://qdteng.online/2024/09/27/%E9%9D%9E%E4%B8%BB%E6%B5%81%E7%9B%91%E6%8E%A7hertzbeat/"/>
    <id>https://qdteng.online/2024/09/27/%E9%9D%9E%E4%B8%BB%E6%B5%81%E7%9B%91%E6%8E%A7hertzbeat/</id>
    <published>2024-09-27T12:50:35.000Z</published>
    <updated>2024-10-07T00:17:54.390Z</updated>
    
    <content type="html"><![CDATA[<h3 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h3><pre><code>一年又一年的项目积累下来如何实时监控项目的运行状态？尤其是跨机房、服务器运营商的各种项目</code></pre><h3 id="http式远程监控使用"><a href="#http式远程监控使用" class="headerlink" title="http式远程监控使用"></a>http式远程监控使用</h3><ul><li><p><a href="https://hertzbeat.apache.org/zh-cn/docs/start/quickstart/">Apache HertzBeat </a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/2390847">入门资料</a></p></li><li><p>默认账号密码 admin&#x2F;hertzbeat</p></li><li><p>推荐docker运行 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1157:1157 -p 1158:1158 --name hertzbeat apache/hertzbeat</span><br></pre></td></tr></table></figure><p>运行后像下图那么一配置，以后再也不怕吃饭睡觉不知道哪个服务无法访问了</p></li><li><p>监控中心-应用服务监控-HTTP API<br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/hertzbeat-http-api.png"></p></li><li><p>告警-消息通知-通知策略-新增通知策略<br><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/hertzbeat-email-set.png"></p></li></ul><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;事情是这样的&quot;&gt;&lt;a href=&quot;#事情是这样的&quot; class=&quot;headerlink&quot; title=&quot;事情是这样的&quot;&gt;&lt;/a&gt;事情是这样的&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;一年又一年的项目积累下来如何实时监控项目的运行状态？尤其是跨机房、服务器运营商的各种项目
&lt;</summary>
      
    
    
    
    <category term="后端" scheme="https://qdteng.online/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="监控" scheme="https://qdteng.online/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="运维" scheme="https://qdteng.online/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Hertzbeat" scheme="https://qdteng.online/tags/Hertzbeat/"/>
    
    <category term="第三方应用监控" scheme="https://qdteng.online/tags/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>微信转账到零钱</title>
    <link href="https://qdteng.online/2024/09/27/%E5%BE%AE%E4%BF%A1%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%9B%B6%E9%92%B1/"/>
    <id>https://qdteng.online/2024/09/27/%E5%BE%AE%E4%BF%A1%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%9B%B6%E9%92%B1/</id>
    <published>2024-09-27T12:25:37.000Z</published>
    <updated>2024-10-06T03:26:06.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://pay.weixin.qq.com/docs/merchant/products/batch-transfer-to-balance/introduction.html">商家转账到零钱</a></li></ul><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="异步返回解密失败"><a href="#异步返回解密失败" class="headerlink" title="异步返回解密失败"></a>异步返回解密失败</h3><ul><li>这个支付返回异步通知在本机可正确解密，但是服务器上解密失败。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">解析付款通知出错：支付通知回调，验签、解密失败---&gt;Processing WechatPay notification,signature verification failed,signType[WECHATPAY2-SHA256-RSA2048]serial[***]message[1727406002</span><br><span class="line">DcQqYFLpu2R7SEYz4mH9bDbtoaPlkexC</span><br><span class="line">&#123;&quot;id&quot;:&quot;13bfc133-d1be-5b53-8b90-388863c93e03&quot;,&quot;create_time&quot;:&quot;2024-09-27T10:59:55+08:00&quot;,&quot;resource_type&quot;:&quot;encrypt-resource&quot;,&quot;event_type&quot;:&quot;MCHTRANSFER.BATCH.FINISHED&quot;,&quot;summary&quot;:&quot;鍟嗗杞处鎵规瀹屾垚閫氱煡&quot;,&quot;resource&quot;:&#123;&quot;original_type&quot;:&quot;mch_payment&quot;,&quot;algorithm&quot;:&quot;AEAD_AES_256_GCM&quot;,&quot;ciphertext&quot;:&quot;JoUNycXeCGxbi+ptvs1o4lFlwMdvtuzwStCafdPqmjOE0YZyqZNlJtXeM03EYG+PmjRYevDQtP/l6IhOCoMDGYIBGfRaKT2WrF+81s0VyIqtVaFau0phz4gisangLIA2NMu5OSIHAOhau42NtWvwpPxOO9L6ImQg800qNq9ZthLMSBJ5qJMU5qj1MbdTuHLw8a/BdZ/o62HdJrrsHbRlx9MqYHIJca+ZCFxRAjJOzj0XlltkBUPnavxMCyvDdYi80/PyazIE/z2u7RdzIUBpb8inmVMRfu9raGc289qqMRWUL6AggxNQc/K2PdImBq+aNPUE2/Kze7TcqL6wd1TvNqYDDrRHLd81VpTZm7+ChCjwW+upfZKiC/8BpO03zUZ67Q37ubC7SdSKaUN98/F777Gdx2IbbX8X16iRGOGOhxsoXqobLuGqRfmA6ruo&quot;,&quot;associated_data&quot;:&quot;mch_payment&quot;,&quot;nonce&quot;:&quot;ZpKjEmbKoTZt&quot;&#125;&#125;</span><br><span class="line">]sign[BgLPsyZDaqGM2ObRYaiYjEqwWg+8gpxeWJvhxjRzhyzQh36Xbx6Ff+Rj8urrSSMpEU0/fSjw+GLiFH5wD5Ldf2tnQW520TEWPafMEJNE0cQkKqP8iWT3tkoU+tXclhjYL7XQj1KyU/3MaZ8z0Eb2q7x7iuGWuGX3ANz14skL7jo+tzdL9nx37XlbKiEjXJiOU6kQNhj4jAacqisIj5yGx2zgvGFDsE0DvawbjwdYQFnX9hUZMrEQJINmReQ4alKAW4TShCkxpATGOUaRlRMvcs3gvqJ+bVJJBd6Zrb4IOE7XwmGhKY7vjYBXfQUaYQiaaXM7qTqiwcyvR1LGmRZTvQ==]</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li></ul><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><p>依次排查 nginx、request params、request body、配置文件编码、jdk版本、java运行编码最终确认问题是java运行spring boot的编码问题。</p><ul><li><p>对比方式</p><img src="https://raw.githubusercontent.com/qdteng-cn/qdteng/main/img/java文件编码查看.png" width="200" height="200"  /></li><li><p>运行命令中添加编码  -Dfile.encoding&#x3D;utf-8</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dfile.encoding=utf-8 -jar %JAVA_JAR% --server.port=18085 --spring.profiles.active=prd</span><br></pre></td></tr></table></figure><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pay.weixin.qq.com/docs/merchant/product</summary>
      
    
    
    
    <category term="后端" scheme="https://qdteng.online/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="微信" scheme="https://qdteng.online/tags/%E5%BE%AE%E4%BF%A1/"/>
    
    <category term="微信支付" scheme="https://qdteng.online/tags/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
    
    <category term="wecht pay" scheme="https://qdteng.online/tags/wecht-pay/"/>
    
  </entry>
  
  <entry>
    <title>apache-nifi</title>
    <link href="https://qdteng.online/2024/09/25/apache-nifi/"/>
    <id>https://qdteng.online/2024/09/25/apache-nifi/</id>
    <published>2024-09-25T12:21:05.000Z</published>
    <updated>2024-10-05T08:51:37.506Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apache-NiFi"><a href="#Apache-NiFi" class="headerlink" title="Apache NiFi"></a>Apache NiFi</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Apache NiFi 是一个开源的流式数据处理平台，用于收集、转换和路由数据。它使用户能够轻松地创建、监控和监控数据管道，从而实现数据收集、转换和路由。<br>更详细的介绍请移步<a href="https://nifi.apache.org/">Apache NiFi</a> 官网 and <a href="https://blog.csdn.net/jiangshouzhuang/article/details/105609041">Apache NiFi 如何从入门到不放弃</a>  。<br>为什么不是 canal、flume、spark 、flink？ 在我看来不同的业务场景使用的工具也不尽相同，我尤其喜欢nifi的<strong>颜值</strong></p><h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><h3 id="相关环境"><a href="#相关环境" class="headerlink" title="相关环境"></a>相关环境</h3><ul><li>Debian 11</li><li>JDK 22</li><li>NIFI 2.0.0-M3</li></ul><p>至于具体安装步骤 可参考 <a href="https://blog.csdn.net/u013071014/article/details/135702019">NIFI 2.0.0版本HTTPS访问部署</a><br>此处着重强调关于https问题，nifi的https端口为9443，但是默认的证书是自签名的，所以需要修改证书，否则无法访问。<br>因项目中存在多个部署环境，经常会修改nifi的访问ip所以根据需要写了个证书替换的脚本</p><h3 id="nifi-证书替换脚本"><a href="#nifi-证书替换脚本" class="headerlink" title="nifi 证书替换脚本"></a>nifi 证书替换脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nifi 证书替换脚本</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">lastip=&quot;192.168.2.4&quot;</span><br><span class="line">newip=&quot;1.1.1.1&quot;</span><br><span class="line">password=&quot;abcdef123456&quot;</span><br><span class="line"></span><br><span class="line">sed -i &quot;s/$lastip/$newip/g&quot; nifi.properties</span><br><span class="line">rm -rf nifi.crt nifi.csr  nifi.key  nifi.p12</span><br><span class="line">openssl genpkey -algorithm RSA -out nifi.key</span><br><span class="line">openssl req -new -key nifi.key -out nifi.csr -subj &quot;/C=US/ST=California/L=San Francisco/O=My Company/CN=$newip&quot;</span><br><span class="line">openssl x509 -req -days 3650 -in nifi.csr -signkey nifi.key -out nifi.crt</span><br><span class="line">openssl pkcs12 -export -in nifi.crt -inkey nifi.key -out nifi.p12 -name nifi -password pass:$password</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义NIFI流程模板"><a href="#自定义NIFI流程模板" class="headerlink" title="自定义NIFI流程模板"></a>自定义NIFI流程模板</h2><h2 id="导入导出"><a href="#导入导出" class="headerlink" title="导入导出"></a>导入导出</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Apache-NiFi&quot;&gt;&lt;a href=&quot;#Apache-NiFi&quot; class=&quot;headerlink&quot; title=&quot;Apache NiFi&quot;&gt;&lt;/a&gt;Apache NiFi&lt;/h1&gt;&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;head</summary>
      
    
    
    
    <category term="后端" scheme="https://qdteng.online/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Apache" scheme="https://qdteng.online/tags/Apache/"/>
    
    <category term="Nifi" scheme="https://qdteng.online/tags/Nifi/"/>
    
    <category term="Java" scheme="https://qdteng.online/tags/Java/"/>
    
    <category term="大数据" scheme="https://qdteng.online/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="ETL" scheme="https://qdteng.online/tags/ETL/"/>
    
  </entry>
  
  <entry>
    <title>mybatis中使用DDL语句对clickhouse操作</title>
    <link href="https://qdteng.online/2024/09/24/mybatis%E4%B8%AD%E4%BD%BF%E7%94%A8DDL%E8%AF%AD%E5%8F%A5%E5%AF%B9clickhouse%E6%93%8D%E4%BD%9C/"/>
    <id>https://qdteng.online/2024/09/24/mybatis%E4%B8%AD%E4%BD%BF%E7%94%A8DDL%E8%AF%AD%E5%8F%A5%E5%AF%B9clickhouse%E6%93%8D%E4%BD%9C/</id>
    <published>2024-09-24T11:55:56.000Z</published>
    <updated>2024-10-06T01:01:59.170Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><h2 id="mybatisplus-spring-boot-多数据源配置"><a href="#mybatisplus-spring-boot-多数据源配置" class="headerlink" title="mybatisplus spring boot  多数据源配置"></a>mybatisplus spring boot  多数据源配置</h2><h3 id="pom-xml-添加引用"><a href="#pom-xml-添加引用" class="headerlink" title="pom.xml 添加引用"></a>pom.xml 添加引用</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="application-yml-配置"><a href="#application-yml-配置" class="headerlink" title="application.yml 配置"></a>application.yml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">    datasource:</span><br><span class="line">    druid:</span><br><span class="line">        stat-view-servlet:</span><br><span class="line">            enabled: true</span><br><span class="line">    dynamic:</span><br><span class="line">        # 配置全局druid参数，请按需配置</span><br><span class="line">        druid:</span><br><span class="line">            initial-size: 5</span><br><span class="line">            max-active: 8</span><br><span class="line">            min-idle: 3</span><br><span class="line">            max-wait: 1000</span><br><span class="line">            validation-query: &#x27;select 1&#x27;</span><br><span class="line">        primary: master</span><br><span class="line">        datasource:</span><br><span class="line">            #mysql数据库</span><br><span class="line">            master:</span><br><span class="line">                username: root</span><br><span class="line">                password: ***</span><br><span class="line">                url: jdbc:mysql://1.1.1.1:3306/weilai_crawl?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8</span><br><span class="line">                driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">            #clickhouse数据库</span><br><span class="line">            slave_1:</span><br><span class="line">                url: jdbc:clickhouse://1.1.1.1:8123/default?use_server_time_zone=true&amp;use_server_time_zone=false</span><br><span class="line">                username: default</span><br><span class="line">                password: ****</span><br><span class="line">                driver-class-name: com.clickhouse.jdbc.ClickHouseDriver</span><br></pre></td></tr></table></figure><h1 id="ClickHousee-DDL-问题"><a href="#ClickHousee-DDL-问题" class="headerlink" title="ClickHousee DDL 问题"></a>ClickHousee DDL 问题</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在使用mybatis 调用update 方法执行clickhouse的ddl建表语句时出现异常 ,mybatis有sql语句的校验，对于clickhouse语法部分关键字不能识别，所以导致sql解析错误，找了半天mybatisplus组件好像没有解决办法。只能换了个思路通过mybatis获取数据源的jdbc connection，使用JDBC来执行DDL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: </span><br><span class="line">### Error updating database.  Cause: com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Failed to process, Error SQL: CREATE TABLE <span class="title function_">device_data_all_history</span> <span class="params">( `sys_id` String  , `dev_id` String  ,  `create_time` DateTime DEFAULT now()</span> , `insert_time` DateTime DEFAULT <span class="title function_">now</span><span class="params">()</span> , `c1`  String )</span><br><span class="line">ENGINE = MergeTree</span><br><span class="line">PARTITION BY <span class="title function_">toYYYYMMDD</span><span class="params">(create_time)</span></span><br><span class="line">ORDER <span class="title function_">BY</span> <span class="params">(dev_id,</span></span><br><span class="line"><span class="params"> create_time)</span></span><br><span class="line"><span class="type">SETTINGS</span> <span class="variable">index_granularity</span> <span class="operator">=</span> <span class="number">8192</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Caused by: net.sf.jsqlparser.parser.ParseException: Encountered unexpected token: <span class="string">&quot;ORDER&quot;</span> <span class="string">&quot;ORDER&quot;</span></span><br><span class="line">    at line <span class="number">4</span>, column <span class="number">4.</span></span><br><span class="line"></span><br><span class="line">Was expecting one of:</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;;&quot;</span></span><br><span class="line">    <span class="string">&quot;AS&quot;</span></span><br><span class="line">    <span class="string">&quot;DISABLE&quot;</span></span><br><span class="line">    <span class="string">&quot;ENABLE&quot;</span></span><br><span class="line">    <span class="string">&quot;LIKE&quot;</span></span><br><span class="line">    &lt;EOF&gt;</span><br></pre></td></tr></table></figure><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><h3 id="mybatisPlus-多数据源获取-JDBC-Connection"><a href="#mybatisPlus-多数据源获取-JDBC-Connection" class="headerlink" title="mybatisPlus 多数据源获取 JDBC Connection"></a>mybatisPlus 多数据源获取 JDBC Connection</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> DynamicRoutingDataSource dynamicRoutingDataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">//某业务方法</span></span><br><span class="line">.....()&#123;</span><br><span class="line">    <span class="comment">//clickhouse 建表语句</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span><span class="string">&quot;create table ..... &quot;</span> ;</span><br><span class="line">    <span class="comment">//获取数据源 Connection</span></span><br><span class="line">    java.sql.<span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span>   dynamicRoutingDataSource.getDataSource(<span class="string">&quot;slave_1&quot;</span>).getConnection();</span><br><span class="line">    connection.setAutoCommit(<span class="literal">true</span>);</span><br><span class="line">    java.sql.<span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span>connection.createStatement();</span><br><span class="line">    statement.execute(sql);</span><br><span class="line">    statement.close();</span><br><span class="line">    connection.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>完结</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前置准备&quot;&gt;&lt;a href=&quot;#前置准备&quot; class=&quot;headerlink&quot; title=&quot;前置准备&quot;&gt;&lt;/a&gt;前置准备&lt;/h1&gt;&lt;h2 id=&quot;mybatisplus-spring-boot-多数据源配置&quot;&gt;&lt;a href=&quot;#mybatisplus-spr</summary>
      
    
    
    
    <category term="后端" scheme="https://qdteng.online/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="clickhouse" scheme="https://qdteng.online/tags/clickhouse/"/>
    
    <category term="mybatis" scheme="https://qdteng.online/tags/mybatis/"/>
    
    <category term="多数据源" scheme="https://qdteng.online/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
  </entry>
  
</feed>
